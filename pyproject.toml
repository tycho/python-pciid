[build-system]
requires = ["hatchling>=1.25", "hatch-vcs>=0.4"]
build-backend = "hatchling.build"

[project]
name = "pciid"
dynamic = ["version"]
description = "PCI ID database readers (text/binary) with Linux sysfs enumeration and topology helpers"
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT" }
authors = [
	{ name = "Steven Noonan", email = "steven@uplinklabs.net" }
]
keywords = ["pci", "pci-express", "sysfs", "hardware", "lspci", "hwdata", "pci.ids"]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: POSIX :: Linux",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Typing :: Typed",
]

dependencies = []  # keep runtime deps zero; sysfs + stdlib only

[project.scripts]
pciid-lspci = "pciid.cli_lspci:main"

[project.urls]
Homepage = "https://github.com/tycho/pciid"
Issues = "https://github.com/tycho/pciid/issues"

[tool.hatch.version]
source = "vcs"
tag-pattern = "^(?:v)?(?P<version>\\d+\\.\\d+\\.\\d+(?:[\\w\\.\\-+]*))$"

[tool.hatch.build.targets.wheel.hooks.custom]
path = "hatch_build.py"

[tool.hatch.build.targets.sdist.hooks.custom]
path = "hatch_build.py"

[tool.hatch.build.targets.wheel]
packages = ["pciid"]
include = [
  "pciid/py.typed",
  "pciid/data/pci.ids",
  "pciid/data/pci.ids.bin",
  "pciid/data/manifest.json",
]
# If you generate the binary/text snapshots during release, ensure scripts produce these paths.

[tool.hatch.build.targets.sdist]
include = ["pciid", "scripts", "README.md", "LICENSE", "pyproject.toml", "tests"]

# -------------------------
# Tooling (type checking, lint, tests)
# -------------------------

[tool.mypy]
python_version = "3.11"
strict = true
warn_unused_ignores = true
warn_redundant_casts = true
no_implicit_optional = true
disallow_untyped_defs = true
disallow_any_generics = true
disallow_subclassing_any = true
check_untyped_defs = true
show_error_codes = true
pretty = true
# Treat this package as typed
packages = ["pciid"]

[tool.ruff]
line-length = 100
target-version = "py311"
select = ["E", "F", "I", "B", "UP", "TID", "PIE"]
ignore = []

[tool.ruff.format]
quote-style = "preserve"

[tool.pytest.ini_options]
addopts = "-q --cov=pciid --cov-report=term-missing:skip-covered --cov-fail-under=85"
testpaths = ["tests"]

[tool.coverage.run]
branch = true
source = ["pciid"]

[dependency-groups]
dev = [
    "black>=25.1.0",
]

# -------------------------
# Dev extras (opt-in)
# -------------------------

[project.optional-dependencies]
dev = [
  "mypy>=1.10",
  "ruff>=0.4",
  "pytest>=8",
  "pytest-cov>=5",
  "coverage>=7.5",
  "types-setuptools",
]
